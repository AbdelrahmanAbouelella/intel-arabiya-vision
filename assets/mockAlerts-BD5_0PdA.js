const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/alerts-w-P_XNaJ.js","assets/http-DM1drYR6.js","assets/index-BfBpM7jo.js","assets/index-Cox3QMT5.css"])))=>i.map(i=>d[i]);
import{_ as r}from"./index-BfBpM7jo.js";import"./mockCompanies-BKA-rvPk.js";const o=e=>new Promise(t=>setTimeout(t,e));let a=[{id:"r-1",name:"High risk (>=70) in KSA",active:!0,scope:{country:"KSA"},condition:{metric:"risk_score",op:">=",value:70},channels:["web"],created_at:new Date().toISOString()}],c=[];async function y(){return await o(80),JSON.parse(JSON.stringify(a))}async function m(e){{const{createRule:t}=await r(async()=>{const{createRule:s}=await import("./alerts-w-P_XNaJ.js");return{createRule:s}},__vite__mapDeps([0,1,2,3]));return t(e)}}async function R(e,t){await o(80);const s=a.find(n=>n.id===e);s&&(s.active=t)}async function u(e){{const{testRule:t}=await r(async()=>{const{testRule:s}=await import("./alerts-w-P_XNaJ.js");return{testRule:s}},__vite__mapDeps([0,1,2,3]));return t(e)}}async function w(){{const{listHistory:e}=await r(async()=>{const{listHistory:s}=await import("./alerts-w-P_XNaJ.js");return{listHistory:s}},__vite__mapDeps([0,1,2,3]));return(await e({})).items}}async function d(e){const t=a.find(i=>i.id===e);if(!t)return 0;const n=(await u(t)).matches.map(i=>({...i,delivered_channels:t.channels,summary:`Rule '${t.name}' matched ${i.company_name} (${i.snapshot.risk_score??0})`}));return c.push(...n),n.length}export{m as createRule,w as listHistory,y as listRules,d as runNow,u as testRule,R as toggleRule};
